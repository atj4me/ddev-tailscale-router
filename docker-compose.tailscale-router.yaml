#ddev-generated
services:
  tailscale-router:
      # We build a custom image to add socat
      build:
        context: .
        args:
          - DDEV_UID=${DDEV_UID}
          - DDEV_GID=${DDEV_GID}
          - DDEV_USER=ddev
        dockerfile_inline: |
          FROM tailscale/tailscale:latest
          ARG DDEV_USER
          ARG DDEV_UID
          ARG DDEV_GID
          RUN <<EOF
           set -eu
            apk add --no-cache socat
            addgroup -g $${DDEV_GID} $${DDEV_USER}
            adduser -D -H -u $${DDEV_UID} -G $${DDEV_USER} -s /bin/sh $${DDEV_USER}
          EOF
      devices:
        - /dev/net/tun:/dev/net/tun
      hostname: ${DDEV_SITENAME}
      container_name: ddev-${DDEV_SITENAME}-tailscale-router
      environment:
        - TS_AUTHKEY=${TS_AUTHKEY}
        - TS_HOSTNAME=${DDEV_SITENAME}
        - TS_EXTRA_ARGS=--accept-routes --ssh
        - TS_STATE_DIR=/var/lib/tailscale
        - TS_USERSPACE=false
        - TS_PRIVACY=${TS_PRIVACY:-private}
        - TS_SERVE_CONFIG=/config/tailscale-${TS_PRIVACY}.json
      volumes:
        - tailscale-router-state:/var/lib/tailscale
        - ./tailscale-router/config:/config
        - .:/mnt/ddev_config
        - ddev-global-cache:/mnt/ddev-global-cache
      cap_add:
        - NET_ADMIN
      restart: unless-stopped
      labels:
        com.ddev.site-name: ${DDEV_SITENAME}
        com.ddev.approot: ${DDEV_APPROOT}
      depends_on:
        - web
      post_start:
       - command: ["sh", "-c", "socat TCP-LISTEN:8080,reuseaddr,fork TCP:web:${DDEV_ROUTER_HTTP_PORT} >> /var/log/ddev.log 2>&1 &"]
       
volumes:
  tailscale-router-state:
